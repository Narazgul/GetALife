[versions]

kotlinVersion = "2.0.0"
ksp-version = "2.0.0-1.0.21"
android-gradle-plugin = "8.4.1"
splashscreenVersion = "1.0.1"

gemini-version = "0.7.0"
chatgpt-version = "3.7.2"

googleServicesVersion = "4.4.2"

firebaseBomVersion = "33.1.0"
firebase-appdistribution-gradle = "5.0.0"
firebaseCrashlytics = "3.0.1"
firebase-perf-plugin = "1.4.2"

hiltVersion = "2.51.1"
hilt-navigation-compose = "1.2.0"

composeBomVersion = "2024.05.00"
activityCompose = "1.9.0"
core-ktx = "1.13.1"
lifecycleRuntimeCompose = "2.8.1"
navigationCompose = "2.8.0-beta02"
roomVersion = "2.6.1"

emoji2Emojipicker = "1.4.0"

junit = "1.1.5"
jUnit4Version = "4.13.2"
uiTestJunit4 = "1.6.7"
junit5Version = "5.10.2"
assertk = "0.28.1"

####################################################################################################

[libraries]

# Top-level `build.gradle.kts` file
google-services = { module = "com.google.gms:google-services", version.ref = "googleServicesVersion" }
firebase-appdistribution-gradle = { module = "com.google.firebase:firebase-appdistribution-gradle", version.ref = "firebase-appdistribution-gradle" }
firebase-perf-plugin = { module = "com.google.firebase:perf-plugin", version.ref = "firebase-perf-plugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
gemini-ai = { module = "com.google.ai.client.generativeai:generativeai", version.ref = "gemini-version" }
chatgpt-ai = { module = "com.aallam.openai:openai-client", version.ref = "chatgpt-version"}

# Core
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeCompose" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeCompose" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreenVersion" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBomVersion" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui = { module = "androidx.compose.ui:ui" }
debug-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
debug-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
debug-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBomVersion" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-perf = { module = "com.google.firebase:firebase-perf" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-remote-config = { module = "com.google.firebase:firebase-config" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltVersion" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-navigation-compose" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltVersion" }

# Room
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
room-test = { module = "androidx.room:room-testing", version.ref = "roomVersion" }

# Misc
emoji2-emojipicker = { group = "androidx.emoji2", name = "emoji2-emojipicker", version.ref = "emoji2Emojipicker" }

# Testing
junit4 = { module = "junit:junit", version.ref = "jUnit4Version" }
junit4-androidx = { module = "androidx.test.ext:junit", version.ref = "junit" }
junit4-ui = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "uiTestJunit4" }
junit5-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5Version" }
junit5-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5Version" }
junit5-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5Version" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }

####################################################################################################

[bundles]

core = ["core-ktx", "lifecycle-runtime-compose", "activity-compose", "lifecycle-viewmodel-compose", "navigation-compose", "splashscreen"]
hilt = ["hilt-android", "hilt-navigation-compose"]
room = ["room-ktx", "room-runtime"]
compose = ["compose-ui", "compose-ui-preview", "compose-material3"]
compose-debug = ["debug-compose-ui-tooling", "debug-compose-ui-tooling-preview", "debug-compose-ui-test-manifest"]
firebase = ["firebase-analytics", "firebase-crashlytics", "firebase-perf", "firebase-auth", "firebase-firestore", "firebase-remote-config"]
junit4 = ["junit4-androidx", "junit4-ui"]
testing = ["junit4", "junit5-api", "junit5-params", "assertk"]

####################################################################################################

[plugins]

android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinVersion" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics"}
hilt-plugin = { id = "com.google.dagger.hilt.android", version.ref = "hiltVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }