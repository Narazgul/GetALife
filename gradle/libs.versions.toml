[versions]

kotlinVersion = "2.2.10"
ksp-version = "2.2.10-2.0.2"
android-gradle-plugin = "8.12.1"
splashscreenVersion = "1.0.1"
datetime = "0.7.1"

chatgptVersion = "4.0.1"

googleServicesVersion = "4.4.3"
playServicesAuthVersion = "21.4.0"
facebookSdkVersion = "18.1.3"

firebaseBomVersion = "34.1.0"
firebaseCrashlytics = "3.0.6"
firebase-perf-plugin = "2.0.1"

hiltVersion = "2.57.1"
hilt-navigation-compose = "1.2.0"

composeBomVersion = "2025.08.00"
activityCompose = "1.10.1"
core-ktx = "1.17.0"
lifecycleRuntimeCompose = "2.9.2"
navigationComposeVersion = "2.9.3"
roomVersion = "2.7.2"
appUpdateVersion = "2.1.0"
inAppReviewVersion = "2.0.2"
datastoreVersion = "1.1.7"

emojipickerVersion = "1.5.0"
superwallVersion = "2.5.1"
revenuecatVersion = "9.3.2"
crispVersion = "2.0.13"

junit = "1.3.0"
jUnit4Version = "4.13.2"
uiTestJunit4 = "1.9.0"
mannOderMausJunit5 = "1.13.1.0"
junit5Version = "5.13.4"
coroutineTest = "1.10.2"
flowTest = "1.2.1"
assertk = "0.28.1"
mockk = "1.14.5"
storage = "1.6.0"
work = "2.10.3"

########################################################################################################################

[libraries]

# Top-level `build.gradle.kts` file
google-services = { module = "com.google.gms:google-services", version.ref = "googleServicesVersion" }
firebase-perf-plugin = { module = "com.google.firebase:perf-plugin", version.ref = "firebase-perf-plugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }

# Core
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeCompose" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeCompose" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationComposeVersion" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreenVersion" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
app-update = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdateVersion" }
in-app-review = { module = "com.google.android.play:review-ktx", version.ref = "inAppReviewVersion" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
datastore = { module= "androidx.datastore:datastore-preferences", version.ref = "datastoreVersion" }
datastore-proto = { module= "androidx.datastore:datastore", version.ref = "datastoreVersion" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBomVersion" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui = { module = "androidx.compose.ui:ui" }
debug-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
debug-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
debug-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBomVersion" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-perf = { module = "com.google.firebase:firebase-perf" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-remote-config = { module = "com.google.firebase:firebase-config" }
firebase-appcheck-playintegrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
firebase-appcheck-debug = { module = "com.google.firebase:firebase-appcheck-debug" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-inappmessaging = { module = "com.google.firebase:firebase-inappmessaging-display" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuthVersion" }
facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebookSdkVersion" }

# AI
firebase-ai = { module = "com.google.firebase:firebase-ai" }
chatgpt-ai = { module = "com.aallam.openai:openai-client", version.ref = "chatgptVersion" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltVersion" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-navigation-compose" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltVersion" }

# Room
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
room-test = { module = "androidx.room:room-testing", version.ref = "roomVersion" }

superwall = { module = "com.superwall.sdk:superwall-android", version.ref = "superwallVersion" }
superwallcompose = { module = "com.superwall.sdk:superwall-compose", version.ref = "superwallVersion" }
revenuecat = { module = "com.revenuecat.purchases:purchases", version.ref = "revenuecatVersion" }
crisp = { module = "im.crisp:crisp-sdk", version.ref = "crispVersion"}
emoji2-emojipicker = { group = "androidx.emoji2", name = "emoji2-emojipicker", version.ref = "emojipickerVersion" }

# Testing
junit4 = { module = "junit:junit", version.ref = "jUnit4Version" }
junit4-androidx = { module = "androidx.test.ext:junit", version.ref = "junit" }
junit4-ui = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "uiTestJunit4" }
junit5-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5Version" }
junit5-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5Version" }
junit5-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5Version" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutineTest" }
flow-test = { module = "app.cash.turbine:turbine", version.ref = "flowTest" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
storage = { group = "androidx.test.services", name = "storage", version.ref = "storage" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version = "2.2.0" }

########################################################################################################################

[bundles]

core = ["core-ktx", "lifecycle-runtime-compose", "activity-compose", "lifecycle-viewmodel-compose",
    "navigation-compose", "splashscreen", "kotlinx-datetime", "app-update", "in-app-review", "datastore", "datastore-proto"]
hilt = ["hilt-android", "hilt-navigation-compose"]
room = ["room-ktx", "room-runtime"]
compose = ["compose-ui", "compose-ui-preview", "compose-material3"]
compose-debug = ["debug-compose-ui-tooling", "debug-compose-ui-tooling-preview", "debug-compose-ui-test-manifest"]
firebase = ["firebase-analytics", "firebase-crashlytics", "firebase-perf", "firebase-auth", "firebase-firestore",
    "firebase-remote-config", "firebase-appcheck-playintegrity", "firebase-appcheck-debug", "firebase-messaging",
    "firebase-inappmessaging", "play-services-auth", "facebook-login"]
testing = ["junit4", "junit5-api", "junit5-params", "coroutines-test", "flow-test", "assertk", "mockk", "androidx-arch-core-testing"]
testing-android = ["junit4-androidx", "junit4-ui", "mockk-android"]
superwall = ["superwall", "superwallcompose"]

########################################################################################################################

[plugins]

android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinVersion" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }
hilt-plugin = { id = "com.google.dagger.hilt.android", version.ref = "hiltVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }
junit5-plugin = { id = "de.mannodermaus.android-junit5", version.ref = "mannOderMausJunit5" }